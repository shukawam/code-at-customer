plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.2"
}

version = "0.1"
group = "com.oracle.jp.fn.country"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("org.slf4j:slf4j-simple")
    implementation("io.micronaut:micronaut-validation")

    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("com.oracle.jp.fn.country.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks {
    dockerfileNative {
      args("-XX:MaximumHeapSizePercent=80")
    }
    dockerBuild {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name:$project.version"]
    }

    dockerBuildNative {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name-native:$project.version"]
    }
}
graalvmNative.toolchainDetection = false
graalvmNative {
    binaries.configureEach {
        buildArgs.add("--initialize-at-build-time=com.oracle.jp.fn.country")
    }
}
micronaut {
    runtime("oracle_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.oracle.jp.fn.country.*")
    }
}



