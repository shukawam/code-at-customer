version: 0.1
component: build
timeoutInSeconds: 10000
shell: bash
env:
  variables:
    docker_server: nrt.ocir.io
    BUILD_CACHE_OS_BUCKET_NAME: build-cache
    BUILD_CACHE_OS_FILE_NAME: country-cache.zip
    BUILDX_VERSION: v0.8.2
  vaultVariables:
    repository: ocid1.vaultsecret.oc1.ap-tokyo-1.amaaaaaassl65iqa3a6633az4kcvuhacslbefj57tncpysuy5y7ozldwkhyq
  exportedVariables:
    - DOCKER_SERVER
    - REPOSITORY
    - TAG

steps:
  - type: Command
    name: "Export variables"
    command: |
      DOCKER_SERVER=${docker_server}
      REPOSITORY=${repository}
      TAG=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "TAG:" ${TAG}
    onFailure:
      - type: Command
        commnd: |
          echo "Failure successfully handled"
        timeoutInSeconds: 60

  - type: VulnerabilityAudit
    name: "Vulnerability Audit Step"
    configuration:
      buildType: maven
      pomFilePath: ${OCI_PRIMARY_SOURCE_DIR}/country/pom.xml
      maxPermissibleCvssV2Score: 10.0
      maxPermissibleCvssV3Score: 10.0
    knowledgeBaseId: ocid1.admknowledgebase.oc1.ap-tokyo-1.amaaaaaassl65iqaxlcyg3cy3fakw4wnrktgjjc4o72ylglzndmjxxro5fea
    vulnerabilityAuditCompartmentId: ocid1.compartment.oc1..aaaaaaaanjtbllhqxcg67dq7em3vto2mvsbc6pbgk4pw6cx37afzk3tngmoa
    vulnerabilityAuditName: country-${TAG}

  # - type: Command
  #   name: "Docker BuildKit Setup"
  #   timeoutInSeconds: 140
  #   command: |
  #     wget https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-amd64 -O docker-buildx
  #     mkdir -p ~/.docker/cli-plugins
  #     mv docker-buildx ~/.docker/cli-plugins/
  #     chmod +x ~/.docker/cli-plugins/docker-buildx
  #     docker buildx install

  - type: Command
    name: "Build Cache Restore"
    timeoutInSeconds: 140
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/country
      oci os object get --bucket-name ${BUILD_CACHE_OS_BUCKET_NAME} --file ${BUILD_CACHE_OS_FILE_NAME} --name ${BUILD_CACHE_OS_FILE_NAME} && unzip ${BUILD_CACHE_OS_FILE_NAME}
      echo "Done..."
      
  # - type: Command
  #   name: "Build Docker Image using Docker Buildx"
  #   command: |
  #     cd ${OCI_PRIMARY_SOURCE_DIR}/country
  #     export DOCKER_BUILDKIT=1
  #     export DOCKER_CLI_EXPERIMENTAL=enabled
  #     docker buildx create --use
  #     docker buildx build -t=country --cache-from=type=local,src=./country-cache --cache-to=type=local,dest=./country-cache --load ${OCI_PRIMARY_SOURCE_DIR}/country
  #   onFailure:
  #     - type: Command
  #       command: |
  #         echo "Failure successfully handled"
  #       timeoutInSeconds: 60

  - type: Command
    name: "Build Docker Image"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/country
      docker build -t=country .
    onFailure:
      - type: Command
        command: |
          echo "Failure successfully handled"
        timeoutInSeconds: 60

  - type: Command
    name: "Build Cache Upload"
    timeoutInSeconds: 300
    command: |
      ${OCI_PRIMARY_SOURCE_DIR}/country
      rm ${BUILD_CACHE_OS_FILE_NAME} && zip -r ${BUILD_CACHE_OS_FILE_NAME} country-cache/*
      oci os object put --bucket-name ${BUILD_CACHE_OS_BUCKET_NAME} --file ${BUILD_CACHE_OS_FILE_NAME} --force

outputArtifacts:
  - name: country-image
    type: DOCKER_IMAGE
    location: country
  - name: country-manifest
    type: BINARY
    location: app.yaml

